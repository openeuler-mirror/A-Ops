# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ragdoll.models.base_model_ import Model
from ragdoll import util
from ragdoll.models.sync_host_confs import SyncHostConfs


class SyncReq(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, domain_name: str = None, sync_list: List[SyncHostConfs] = None):  # noqa: E501

        """ConfHost - a model defined in Swagger

        :param domain_name: The domain_name of this ConfHost.  # noqa: E501
        :type domain_name: str
        :type sync_list: List[SyncHostConfs]
        """
        self.swagger_types = {
            'domain_name': str,
            'sync_list': List[SyncHostConfs]
        }

        self.attribute_map = {
            'domain_name': 'domainName',
            'sync_list': 'syncList'
        }

        self._domain_name = domain_name
        self._sync_list = sync_list

    @classmethod
    def from_dict(cls, dikt) -> 'SyncReq':
        """Returns the dict as a model

       :param dikt: A dict.
       :type: dict
       :return: The ConfHost of this ConfHost.  # noqa: E501
       :rtype: ConfHost
       """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_name(self) -> str:
        """Gets the domain_name of this ConfHost.

       domain name  # noqa: E501

       :return: The domain_name of this ConfHost.
       :rtype: str
       """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name: str):
        """Sets the domain_name of this ConfHost.

       domain name  # noqa: E501

       :param domain_name: The domain_name of this ConfHost.
       :type domain_name: str
       """

        self._domain_name = domain_name

    @property
    def sync_list(self) -> List[SyncHostConfs]:
        """Gets the sync_list of this SyncReq.


        :return: The sync_list of this SyncReq.
        :rtype: List[SyncHostConfs]
        """

        return self._sync_list

    @sync_list.setter
    def sync_list(self, sync_list: List[SyncHostConfs]):
        """Sets the sync_list of this SyncReq.


        :param sync_list: The sync_list of this SyncReq.
        :type sync_list: List[SyncHostConfs]
        """

        self._sync_list = sync_list
