# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ragdoll.models.base_model_ import Model
from ragdoll import util


class Host(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, host_id: int=None, ip: str=None, ipv6: str=None):  # noqa: E501
        """Host - a model defined in Swagger

        :param host_id: The host_id of this Host.  # noqa: E501
        :type host_id: str
        :param ip: The ip of this Host.  # noqa: E501
        :type ip: str
        :param ipv6: The ipv6 of this Host.  # noqa: E501
        :type ipv6: str
        """
        self.swagger_types = {
            'host_id': int,
            'ip': str,
            'ipv6': str
        }

        self.attribute_map = {
            'host_id': 'hostId',
            'ip': 'ip',
            'ipv6': 'ipv6'
        }

        self._host_id = host_id
        self._ip = ip
        self._ipv6 = ipv6

    @classmethod
    def from_dict(cls, dikt) -> 'Host':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Host of this Host.  # noqa: E501
        :rtype: Host
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_id(self) -> int:
        """Gets the host_id of this Host.

        the id of host  # noqa: E501

        :return: The host_id of this Host.
        :rtype: int
        """
        return self._host_id

    @host_id.setter
    def host_id(self, host_id: int):
        """Sets the host_id of this Host.

        the id of host  # noqa: E501

        :param host_id: The host_id of this Host.
        :type host_id: int
        """
        if host_id is None:
            raise ValueError("Invalid value for `host_id`, must not be `None`")  # noqa: E501

        self._host_id = host_id

    @property
    def ip(self) -> str:
        """Gets the ip of this Host.

        the ipv4 address of host  # noqa: E501

        :return: The ip of this Host.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip: str):
        """Sets the ip of this Host.

        the ipv4 address of host  # noqa: E501

        :param ip: The ip of this Host.
        :type ip: str
        """

        self._ip = ip

    @property
    def ipv6(self) -> str:
        """Gets the ipv6 of this Host.

        the ipv6 address of host  # noqa: E501

        :return: The ipv6 of this Host.
        :rtype: str
        """
        return self._ipv6

    @ipv6.setter
    def ipv6(self, ipv6: str):
        """Sets the ipv6 of this Host.

        the ipv6 address of host  # noqa: E501

        :param ipv6: The ipv6 of this Host.
        :type ipv6: str
        """

        self._ipv6 = ipv6
