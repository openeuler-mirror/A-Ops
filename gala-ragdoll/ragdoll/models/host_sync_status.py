# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ragdoll.models.base_model_ import Model
from ragdoll.models.conf_is_synced import ConfIsSynced
from ragdoll import util


class HostSyncStatus(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, host_id: int = None, sync_status: List[ConfIsSynced] = None):  # noqa: E501
        """SyncStatus - a model defined in Swagger

        :param host_id: The host_id of this HostSyncStatus.  # noqa: E501
        :type host_id: str
        :param host_status: The host_status of this HostSyncStatus.  # noqa: E501
        :type host_status: List[object]
        """
        self.swagger_types = {
            'host_id': int,
            'sync_status': List[ConfIsSynced]
        }

        self.attribute_map = {
            'host_id': 'hostId',
            'sync_status': 'syncStatus'
        }

        self._host_id = host_id
        self._sync_status = sync_status

    @classmethod
    def from_dict(cls, dikt) -> 'HostSyncStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HostSyncStatus of this SyncStatus.  # noqa: E501
        :rtype: HostSyncStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host_id(self) -> int:
        """Gets the host_id of this HostSyncStatus.

        domain name  # noqa: E501

        :return: The host_id of this HostSyncStatus.
        :rtype: str
        """
        return self._host_id

    @host_id.setter
    def host_id(self, host_id: int):
        """Sets the host_id of this HostSyncStatus.

        host id  # noqa: E501

        :param host_id: The host_id of this HostSyncStatus.
        :type host_id: str
        """

        self._host_id = host_id

    @property
    def sync_status(self) -> List[ConfIsSynced]:
        """Gets the sync_status of this HostSyncStatus of host.


        :return: The sync_status of this HostSyncStatus of host.
        :rtype: List[ConfIsSynced]
        """
        return self._sync_status

    @sync_status.setter
    def sync_status(self, sync_status: List[ConfIsSynced]):
        """Sets the sync_status of this HostSyncStatus.


        :param sync_status: The sync_status of this HostSyncStatus of host.
        :type sync_status: List[ConfIsSynced]
        """

        self._sync_status = sync_status
