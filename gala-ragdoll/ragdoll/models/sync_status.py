# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from ragdoll.models.base_model_ import Model
from ragdoll.models.host_sync_status import HostSyncStatus
from ragdoll import util


class SyncStatus(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, domain_name: str=None, host_status: List[HostSyncStatus]=None):  # noqa: E501
        """SyncStatus - a model defined in Swagger

        :param domain_name: The domain_name of this SyncStatus.  # noqa: E501
        :type domain_name: str
        :param host_status: The sync_status of this SyncStatus.  # noqa: E501
        :type host_status: List[HostSyncStatus]
        """
        self.swagger_types = {
            'domain_name': str,
            'host_status': List[HostSyncStatus]
        }

        self.attribute_map = {
            'domain_name': 'domainName',
            'host_status': 'hostStatus'
        }

        self._domain_name = domain_name
        self._host_status = host_status

    @classmethod
    def from_dict(cls, dikt) -> 'SyncStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SyncStatus of this SyncStatus.  # noqa: E501
        :rtype: SyncStatus
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_name(self) -> str:
        """Gets the domain_name of this SyncStatus.

        domain name  # noqa: E501

        :return: The domain_name of this SyncStatus.
        :rtype: str
        """
        return self._domain_name

    @domain_name.setter
    def domain_name(self, domain_name: str):
        """Sets the domain_name of this SyncStatus.

        domain name  # noqa: E501

        :param domain_name: The domain_name of this SyncStatus.
        :type domain_name: str
        """

        self._domain_name = domain_name

    @property
    def host_status(self) -> List[HostSyncStatus]:
        """Gets the host_status of this SyncStatus of host.


        :return: The host_status of this SyncStatus of host.
        :rtype: List[HostSyncStatus]
        """
        return self._host_status

    @host_status.setter
    def host_status(self, host_status: List[HostSyncStatus]):
        """Sets the sync_status of this SyncStatus.


        :param host_status: The host_status of this SyncStatus of host.
        :type host_status: List[HostSyncStatus]
        """

        self._host_status = host_status
